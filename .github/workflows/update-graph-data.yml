name: Update Knowledge Graph Data

on:
  push:
    branches: [ main ]
    paths:
      - 'memory/**'
      - 'docs/**'
      - 'legal/**'
      - 'assets/data/**'
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh of graph data'
        required: false
        default: 'false'
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'

jobs:
  update-graph-data:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for accurate timestamps
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm install jsdom
          npm install front-matter
          npm install crypto
      
      - name: Get commit info
        id: commit
        run: |
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "short_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
      
      - name: Generate index and graph data
        run: |
          # Create logs directory
          mkdir -p logs
          
          # Run generator with logging
          node .github/scripts/update-graph-data.js \
            --commit ${{ steps.commit.outputs.hash }} \
            --force ${{ github.event.inputs.force_refresh }} \
            --debug ${{ github.event.inputs.debug_mode }} \
            2>&1 | tee logs/generator.log
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Validate generated data
        run: |
          node .github/scripts/validate-graph-data.js 2>&1 | tee logs/validate-graph.log
          node .github/scripts/validate-index.js 2>&1 | tee logs/validate-index.log
      
      - name: Store logs
        uses: actions/upload-artifact@v3
        with:
          name: graph-data-logs-${{ steps.commit.outputs.short_hash }}
          path: logs/
          retention-days: 30
      
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status -s) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Switch to gh-pages-data branch
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git checkout -B gh-pages-data
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: Commit and push if changed
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add assets/data/index.json
          git add assets/data/graph-data.json
          
          git commit -m "Update knowledge graph data [skip ci]
          
          - Updated index.json
          - Updated graph-data.json
          - Commit: ${{ steps.commit.outputs.hash }}
          - Timestamp: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          
          git push origin gh-pages-data --force
      
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            // Read logs if they exist
            let logs = '';
            try {
              logs = fs.readFileSync('logs/generator.log', 'utf8');
            } catch (error) {
              logs = 'Logs not available';
            }
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Graph Data Update Failed',
              body: `The knowledge graph data update workflow failed.
              
              ## Details
              - Commit: ${process.env.GITHUB_SHA}
              - Workflow: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
              
              ## Logs
              \`\`\`
              ${logs}
              \`\`\`
              `
            }); 